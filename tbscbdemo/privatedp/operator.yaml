apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: operator
    octarine: ignore
  name: cbcontainers-dataplane
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: cbcontainersclusters.operator.containers.carbonblack.io
spec:
  group: operator.containers.carbonblack.io
  names:
    kind: CBContainersCluster
    listKind: CBContainersClusterList
    plural: cbcontainersclusters
    singular: cbcontainerscluster
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: CBContainersCluster is the Schema for the cbcontainersclusters API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: CBContainersClusterSpec defines the desired state of CBContainersCluster
          properties:
            account:
              type: string
            apiGatewaySpec:
              properties:
                accessTokenSecretName:
                  type: string
                adapter:
                  type: string
                host:
                  type: string
                port:
                  type: integer
                scheme:
                  type: string
              required:
              - host
              type: object
            clusterName:
              type: string
            eventsGatewaySpec:
              properties:
                host:
                  type: string
                port:
                  type: integer
              required:
              - host
              type: object
          required:
          - account
          - apiGatewaySpec
          - clusterName
          - eventsGatewaySpec
          type: object
        status:
          description: CBContainersClusterStatus defines the observed state of CBContainersCluster
          type: object
      type: object
  version: v1
  versions:
  - name: v1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: cbcontainershardenings.operator.containers.carbonblack.io
spec:
  group: operator.containers.carbonblack.io
  names:
    kind: CBContainersHardening
    listKind: CBContainersHardeningList
    plural: cbcontainershardenings
    singular: cbcontainershardening
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: CBContainersHardening is the Schema for the cbcontainershardenings API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            accessTokenSecretName:
              type: string
            enforcerSpec:
              properties:
                deploymentAnnotations:
                  additionalProperties:
                    type: string
                  type: object
                env:
                  additionalProperties:
                    type: string
                  type: object
                image:
                  properties:
                    pullPolicy:
                      description: PullPolicy describes a policy for if/when to pull a container image
                      type: string
                    repository:
                      type: string
                    tag:
                      type: string
                  type: object
                labels:
                  additionalProperties:
                    type: string
                  type: object
                podTemplateAnnotations:
                  additionalProperties:
                    type: string
                  type: object
                probes:
                  properties:
                    failureThreshold:
                      format: int32
                      type: integer
                    initialDelaySeconds:
                      format: int32
                      type: integer
                    livenessPath:
                      type: string
                    periodSeconds:
                      format: int32
                      type: integer
                    port:
                      type: integer
                    readinessPath:
                      type: string
                    scheme:
                      description: URIScheme identifies the scheme used for connection to a host for Get actions
                      type: string
                    successThreshold:
                      format: int32
                      type: integer
                    timeoutSeconds:
                      format: int32
                      type: integer
                  type: object
                prometheus:
                  properties:
                    enabled:
                      type: boolean
                    port:
                      type: integer
                  type: object
                replicasCount:
                  format: int32
                  type: integer
                resources:
                  description: ResourceRequirements describes the compute resource requirements.
                  properties:
                    limits:
                      additionalProperties:
                        anyOf:
                        - type: integer
                        - type: string
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                    requests:
                      additionalProperties:
                        anyOf:
                        - type: integer
                        - type: string
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                  type: object
                webhookTimeoutSeconds:
                  format: int32
                  type: integer
              type: object
            eventsGatewaySpec:
              properties:
                host:
                  type: string
                port:
                  type: integer
              required:
              - host
              type: object
            stateReporterSpec:
              properties:
                deploymentAnnotations:
                  additionalProperties:
                    type: string
                  type: object
                env:
                  additionalProperties:
                    type: string
                  type: object
                image:
                  properties:
                    pullPolicy:
                      description: PullPolicy describes a policy for if/when to pull a container image
                      type: string
                    repository:
                      type: string
                    tag:
                      type: string
                  type: object
                labels:
                  additionalProperties:
                    type: string
                  type: object
                podTemplateAnnotations:
                  additionalProperties:
                    type: string
                  type: object
                probes:
                  properties:
                    failureThreshold:
                      format: int32
                      type: integer
                    initialDelaySeconds:
                      format: int32
                      type: integer
                    livenessPath:
                      type: string
                    periodSeconds:
                      format: int32
                      type: integer
                    port:
                      type: integer
                    readinessPath:
                      type: string
                    scheme:
                      description: URIScheme identifies the scheme used for connection to a host for Get actions
                      type: string
                    successThreshold:
                      format: int32
                      type: integer
                    timeoutSeconds:
                      format: int32
                      type: integer
                  type: object
                resources:
                  description: ResourceRequirements describes the compute resource requirements.
                  properties:
                    limits:
                      additionalProperties:
                        anyOf:
                        - type: integer
                        - type: string
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                    requests:
                      additionalProperties:
                        anyOf:
                        - type: integer
                        - type: string
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                  type: object
              type: object
            version:
              type: string
          required:
          - eventsGatewaySpec
          - version
          type: object
        status:
          description: CBContainersHardeningStatus defines the observed state of CBContainersHardening
          type: object
      required:
      - spec
      type: object
  version: v1
  versions:
  - name: v1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
imagePullSecrets:
- name: cbcontainers-operator-public-registry-secret
kind: ServiceAccount
metadata:
  name: cbcontainers-operator
  namespace: cbcontainers-dataplane
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cbcontainers-leader-election-role
  namespace: cbcontainers-dataplane
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: cbcontainers-manager-role
rules:
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - validatingwebhookconfigurations
  verbs:
  - '*'
- apiGroups:
  - apiextensions.k8s.io
  - apps
  - batch
  - ""
  - extensions
  - networking.k8s.io
  - rbac
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - cronjobs
  - customresourcedefinitions
  - daemonsets
  - deployments
  - ingresses
  - jobs
  - namespaces
  - networkpolicies
  - nodes
  - pods
  - replicasets
  - replicationcontrollers
  - rolebindings
  - services
  - statefulsets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  - ""
  resources:
  - deployments
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - operator.containers.carbonblack.io
  resources:
  - cbcontainersclusters
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - operator.containers.carbonblack.io
  resources:
  - cbcontainersclusters/finalizers
  verbs:
  - update
- apiGroups:
  - operator.containers.carbonblack.io
  resources:
  - cbcontainersclusters/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - operator.containers.carbonblack.io
  resources:
  - cbcontainershardenings
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - operator.containers.carbonblack.io
  resources:
  - cbcontainershardenings/finalizers
  verbs:
  - update
- apiGroups:
  - operator.containers.carbonblack.io
  resources:
  - cbcontainershardenings/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - scheduling.k8s.io
  resources:
  - priorityclasses
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cbcontainers-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cbcontainers-leader-election-rolebinding
  namespace: cbcontainers-dataplane
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cbcontainers-leader-election-role
subjects:
- kind: ServiceAccount
  name: cbcontainers-operator
  namespace: cbcontainers-dataplane
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cbcontainers-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cbcontainers-manager-role
subjects:
- kind: ServiceAccount
  name: cbcontainers-operator
  namespace: cbcontainers-dataplane
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cbcontainers-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cbcontainers-proxy-role
subjects:
- kind: ServiceAccount
  name: cbcontainers-operator
  namespace: cbcontainers-dataplane
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: d27fd235.operator.containers.carbonblack.io
kind: ConfigMap
metadata:
  name: cbcontainers-manager-config
  namespace: cbcontainers-dataplane
---
apiVersion: v1
data:
  .dockerconfigjson: eyJhdXRocyI6IHsiaHR0cHM6Ly9pbmRleC5kb2NrZXIuaW8vdjEvIjogeyJhdXRoIjogImIyTjBZWEpwYm1WdmNHVnlZWFJ2Y2pvMk5HSTFOMkkzTXkweU1qZzNMVFEwT1RJdFlqQm1aaTB4WkRnM05tTXdaalJqWXpBPSJ9fX0=
kind: Secret
metadata:
  name: cbcontainers-operator-public-registry-secret
  namespace: cbcontainers-dataplane
type: kubernetes.io/dockerconfigjson
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: operator
  name: cbcontainers-operator-metrics-service
  namespace: cbcontainers-dataplane
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    control-plane: operator
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: operator
  name: cbcontainers-operator
  namespace: cbcontainers-dataplane
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: operator
  template:
    metadata:
      labels:
        control-plane: operator
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        command:
        - /manager
        image: harbor.cbksworld.com/cbks/octarine-operator:3.0.2
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 200m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
      securityContext:
        runAsUser: 65532
      serviceAccountName: cbcontainers-operator
      terminationGracePeriodSeconds: 10

